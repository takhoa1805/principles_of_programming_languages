INPUT:

- AST tree ===> node bắt đầu là Program. Traverse bằng cách gọi attribute của class đó.
- Tất cả attribute thuộc từng class được define trong file AST.py
- Thực hiện các hàm visit trong file StaticCheck.py để statick checking


OUTPUT:
- Raise các error
- Error being worked on:
    - Undeclared
    - Redeclared


WORKING PROGRESS: Declare stuffs
- Lưu trữ tên các identifier đã được tạo ra trong một mảng 2 chiều:
    - Trong đó chiều rộng hoạt động một stack để xử lý trong trường hợp đi từ scope lớn đến scope bé
    - Chiều sâu hoạt động như một list để tham khảo các biến đã được thêm vào.

- Possible cases for function redeclaration:
    - Redeclared trong parameter
    - Redeclared trong block:
        - Declare 2 biến cùng tên trong block
        - Declare 1 biến cùng tên với biến đã khai báo tại parameter.

    - Undeclared:
        - Đối với biến. Biến được dùng khi nào?:
            - Assign statement:
                - LHS expression
                - RHS expression
            - if statement
            - vardecl
            - assignment statement
            - for statement
            - return statement
            - function call statement (call expr)
        - Algorithm:
            - Travel qua tất cả các statement có trong chương trình
            - Trong mỗi statement đó sẽ thực hiện check xem nếu tồn tại exression có sử dụng identifier
            - Logic check việc sử dụng identifier trong expression:
                - Truyền vào parameter tại câu lệnh visit scope tại đoạn visit đó
                - Ở mỗi method visit, check tính hợp lệ của biến nằm trong method đó
                - Bằng cách, một lần nữa - visit đến method Id() truyền thông số env của scope vào => tất cả những logic kiểm tra đều nằm ở method Id()
            ===> Lưu ý: method visit Id không trả về giá trị, chỉ được dùng để xác định undeclared thôi.
            ===> Để lấy tên của identifier sử dụng hàm getIdName()


- Type Mismatch in expression: 4 data types: String, Boolean, Number (float), Array
	- Binary and unary expression:
		- Operators for NUMBER operands' type: PLUS, MINUS, MULTIPLY, DIVIDE, MODULO, NEGATION ===> Result in a NUMBER type
		- Operators for BOOLEAN operands' type: not and or ===> result in a BOOLEAN type
		- Operators for STRING operands' type: ...  (concatenation)===> result in a STRING type
		- Operators for REALATIONAL operations: NUMBER - (= != < > <= >=) STRING - (==)

		- Cần return kiểu từ CallExpr cũng như ArrExpr



